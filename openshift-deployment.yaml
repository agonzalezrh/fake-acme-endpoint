apiVersion: v1
kind: Namespace
metadata:
  name: fake-acme
  labels:
    name: fake-acme
---
apiVersion: v1
kind: Secret
metadata:
  name: upstream-acme-secret
  namespace: fake-acme
type: Opaque
stringData:
  zerossl-api-key: "your-zerossl-api-key-here"
  letsencrypt-directory: "https://acme-v02.api.letsencrypt.org/directory"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fake-acme-config
  namespace: fake-acme
data:
  ACME_DIRECTORY_URL: "https://acme-v02.api.letsencrypt.org/directory"
  LETSENCRYPT_FALLBACK: "true"
  CHALLENGE_PORT: "8080"
  DNS_CHALLENGE_DOMAIN: "acme-challenge.example.com"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fake-acme-pvc
  namespace: fake-acme
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: gp2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fake-acme
  namespace: fake-acme
  labels:
    app: fake-acme
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fake-acme
  template:
    metadata:
      labels:
        app: fake-acme
    spec:
      containers:
      - name: fake-acme
        image: fake-acme:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: DATABASE_PATH
          value: "/data/fake_acme.db"
        - name: ZEROSSL_API_KEY
          valueFrom:
            secretKeyRef:
              name: upstream-acme-secret
              key: zerossl-api-key
        - name: ACME_DIRECTORY_URL
          valueFrom:
            configMapKeyRef:
              name: fake-acme-config
              key: ACME_DIRECTORY_URL
        - name: LETSENCRYPT_FALLBACK
          valueFrom:
            configMapKeyRef:
              name: fake-acme-config
              key: LETSENCRYPT_FALLBACK
        - name: CHALLENGE_PORT
          valueFrom:
            configMapKeyRef:
              name: fake-acme-config
              key: CHALLENGE_PORT
        - name: DNS_CHALLENGE_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: fake-acme-config
              key: DNS_CHALLENGE_DOMAIN
        volumeMounts:
        - name: data-storage
          mountPath: /data
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: data-storage
        persistentVolumeClaim:
          claimName: fake-acme-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: fake-acme-service
  namespace: fake-acme
  labels:
    app: fake-acme
spec:
  selector:
    app: fake-acme
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: fake-acme-route
  namespace: fake-acme
  labels:
    app: fake-acme
spec:
  host: fake-acme.example.com
  to:
    kind: Service
    name: fake-acme-service
    weight: 100
  port:
    targetPort: http
  tls:
    termination: Edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
